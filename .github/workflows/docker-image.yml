name: Build & Deploy

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Test SSH Connection
      run: ssh -o StrictHostKeyChecking=no root@47.118.16.173 "echo '✅ SSH连接成功'"

    - name: Deploy to Server
      run: |
        ssh -o StrictHostKeyChecking=no root@47.118.16.173 'bash -s' <<'EOF'
        set -e
        echo "🚀 开始部署 Django 项目..."

        # 部署主目录
        mkdir -p /opt/test
        cd /opt/test

        # 克隆或更新代码
        if [ ! -d "10_14_test" ]; then
          echo "📥 首次部署，正在克隆仓库..."
          git clone https://github.com/shengzewang339-hue/10_14_test.git
        else
          echo "🔄 仓库已存在，拉取最新更新..."
          cd 10_14_test
          git pull
        fi

        echo "📁 当前路径: $(pwd)"
        echo "📂 当前目录结构:"
        ls -al

        # 进入 djangoProject2 子目录（docker-compose.yml 所在处）
        cd djangoProject2
        echo "📂 进入 djangoProject2 路径: $(pwd)"
        echo "📂 子目录结构:"
        ls -al

        # 检查 docker-compose 文件是否存在
        if [ ! -f "docker-compose.yml" ]; then
          echo "❌ 未找到 docker-compose.yml，请检查仓库路径！"
          exit 1
        fi

        echo "📦 开始构建容器..."
        docker-compose down || true
        docker-compose up -d --build

        echo "✅ 部署完成！Django 已启动在 8000 端口。"
        EOF
